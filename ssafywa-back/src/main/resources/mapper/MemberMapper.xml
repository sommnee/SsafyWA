<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pjt.ssafybuddy.mapper.MemberMapper">
    <resultMap id="member" type="com.pjt.ssafybuddy.entity.member.Member">
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="user_password" property="userPassword"/>
        <result column="user_email" property="userEmail"/>
        <result column="nick_name" property="nickName"/>
        <result column="campus" property="campus"/>
        <result column="refresh_token" property="refreshToken"/>
        <result column="access_token" property="accessToken"/>
        <result column="image_url" property="imageUrl"/> <!-- Added imageUrl mapping -->
    </resultMap>

    <select id="login" resultMap="member">
        select *
        from member
        where user_id = #{id} and user_password = #{pw}
    </select>

    <select id="findByMemberId" resultMap="member">
        SELECT *
        FROM member
        WHERE user_id = #{memberId}
    </select>

    <insert id="insert" parameterType="Member">
        insert into member(user_id, user_name, user_password, user_email, nick_name, campus)
        values(#{userId}, #{userName}, #{userPassword}, #{userEmail}, #{nickName}, #{campus})
    </insert>

    <update id="saveRefreshToken">
        update member set refresh_token = #{token} where user_id = #{id}
    </update>

    <update id="deleteRefreshToken" parameterType="String">
        update member set refresh_token = NULL where user_id = #{userId}
    </update>

    <select id="getRefreshToken" parameterType="String">
        select refresh_token from member where user_id = #{userId}
    </select>

    <select id="findAllExceptUser" resultMap="member">
        SELECT *
        FROM member
        WHERE user_id != #{userId}
    </select>

    <select id="findMembersNotInGroup" resultMap="member">
        SELECT *
        FROM member
        WHERE user_id NOT IN (SELECT user_id FROM group_members WHERE group_id = #{groupId})
    </select>

    <select id="findAllUserIds" resultType="string">
        SELECT user_id FROM member
    </select>

    <update id="updateProfileImage">
        UPDATE member
        SET image_url = #{imageUrl}
        WHERE user_id = #{userId}
    </update>
</mapper>
